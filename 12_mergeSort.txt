/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        if(head==null || head.next==null)
        return head;
        ListNode slow=head;
        ListNode fast=head;
        ListNode prev=head;
        while(fast!=null && fast.next!=null)
        {
            fast=fast.next.next;
            prev=slow;
            
            slow=slow.next;
        }
        prev.next=null;
        ListNode head1=sortList(head);
        ListNode head2=sortList(slow);
        ListNode head3=merge(head1,head2);
        return head3;
        
    }
    private ListNode merge(ListNode h1,ListNode h2)
    {
        if(h1==null || h2==null)
        {
            if(h1==null)
            return h2;
            else
            return h1;
        }
        if(h1.val<h2.val)
        {
            h1.next=merge(h1.next,h2);
            return h1;
        }
        else
        {
            h2.next=merge(h1,h2.next);
            return h2;
        }
    }
}